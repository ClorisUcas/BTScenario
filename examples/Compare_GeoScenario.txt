#https://geoscenario.readthedocs.io/en/latest/Examples/#scenario-1-left-turn-with-occlusion
#We donnot talk about behaviors of ego, so we give a blue car to show these scenarios. we statistics the scenarios lines of Scenic and our language.

#Test1:In this scenario we test the system capabilities on a T-intersection with a wall impairing visibility from the stop line point of view.
#40 13

scenario left_turn() <duration = [:120]>{
	map{
		Junction t_junction with type == "t";	}
	init{
		Car ego with color == "blue", absolute_position == t_junction.road[1];
		Car car with speed == 25, absolute_position == t_junction.road[2];
		Obstacle obs with type == "static", length == 20, width == 1, height == 8.25, relative_to == ego, front_distance == 10;
		}
	execute{
		parallel(){
			ego.turnLeft();
			car.followLane(type="uniform");	
			}
		}
	oracle{	 
		periodic: ego.isCollided() && Scenario.isTimeout();	}}

#https://geoscenario.readthedocs.io/en/latest/Examples/#scenario-2-busy-intersection
#In this scenario we model a right turn on a busy 3-way intersection.
#127 16
scenario busy_intersection() <duration = [:120]>{
	map{
		Junction t_junction with type == "t", t_junction.roads.type == "two_way_two_lane";	}
	init{
		Car ego with absolute_position == t_junction.road[2];
		Car car_right with speed == 20, absolute_position == t_junction.road[3].right_lane;
		Car car_south with speed == 20, absolute_position == t_junction.road[1].right_lane;
		Car car_north with speed == 20, relative_to ==car_right, angle == 0, front_distance == 30;
	}
	execute{
		parallel(){
			ego.turnRight();
			[distance(ego, car_right) == 100] car_right.turnRight();
			[distance(ego, car_south) == 20] car_south.followLane();
			[distance(ego, car_north) == 50] car_north.followLane();
		}	}
	oracle{
		 periodic: ego.isCollided() && isTimeout();	}}

#https://geoscenario.readthedocs.io/en/latest/Examples/#scenario-3-pedestrian-crossing
#Test: In this scenario we model a pedestrian crossing the road outside of the crosswalk.
#38 12
scenario pedestrian(){
 map{
 	Junction crossroad with type == "cross";}
 init{
    Car ego with absolute_position == crossroad.road[1].right_lane;
    Pedestrian person with absolute_position == crossroad.road[2].left_lane.left_boundary.end_position, speed==0.8;
  }
 execute{
 	serial(){ 
 		 ego.turnRight();
 		 [distance(ego, person) <= 30] person.cross(end = crossroad.road[2].right_lane.right_boundary.end_position); } }
 oracle{
  periodic: ego.isCollided() && Scenario.isTimeout(); }}

#https://geoscenario.readthedocs.io/en/latest/Examples/#scenario-4-leading-vehicle-decelerates-to-complete-stop
#Test: In this scenario we model the most frequent crash scenario according to NHTSA (lead vehicle stopped) to test how the ADS reacts to avoid an imminent collision.
#78 13
scenario pedestrian2(){
 map{
 	Road road;}
 init{
    Car ego with absolute_position == road;
    Car car with  relative_to ==ego, angle == 0,front_distance == 100;
   }
 execute{
 	parallel(){
 	ego.followLane();
  	serial(){
  		car.followLane(type = "accelerate") [car.speed == 30] ;
  		car.followLane(type = "decelerate") [car.speed == 0];  }
  	}
  }
 oracle{
  periodic: ego.isCollided() && Scenario.isTimeout(); }}


main{
  load_map("as");
  serial(){
  	left_turn();
  	busy_intersection();
  	pedestrian();
  	pedestrian2();
  	}
}


